<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>tw.waterballsa.gaas.citadelsGame</groupId>
    <artifactId>parent</artifactId>
    <packaging>pom</packaging>
    <version>0.0.1-SNAPSHOT</version>

    <modules>
        <module>domain</module>
        <module>app</module>
        <module>spring</module>
    </modules>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <java.version>17</java.version>
        <lombok.version>1.18.12</lombok.version>
        <javax.inject.version>1</javax.inject.version>
        <org.glassfish.web.javax.el.version>2.2.6</org.glassfish.web.javax.el.version>
        <maven-failsafe-plugin.version>2.22.0</maven-failsafe-plugin.version>
        <maven-surefile-plugin.version>2.22.0</maven-surefile-plugin.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven-checkstyle-plugin.version>3.1.2</maven-checkstyle-plugin.version>
        <puppycrawl.checkstyle.version>8.40</puppycrawl.checkstyle.version>
        <maven-spotbugs-maven-plugin.version>4.2.0</maven-spotbugs-maven-plugin.version>
        <spotbugs-plugin.version>4.2.3</spotbugs-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.cucumber</groupId>
                <artifactId>cucumber-bom</artifactId>
                <version>7.12.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>5.9.3</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit-platform-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-java</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-suite</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>1</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.26</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includes>
                        <include>**/*IT.java</include>
                    </includes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefile-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <configuration>
                    <configLocation>checkstyle.xml</configLocation>
                    <encoding>UTF-8</encoding>
                    <consoleOutput>true</consoleOutput>
                    <failsOnError>true</failsOnError>
                    <linkXRef>false</linkXRef>
                </configuration>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${maven-spotbugs-maven-plugin.version}</version>
                <configuration>
                    <threshold>Low</threshold>
                    <effort>Max</effort>
                    <debug>true</debug>
                    <xmlOutput>true</xmlOutput>
                    <xmlOutputDirectory>target/</xmlOutputDirectory>
                    <omitVisitors>
                        <!-- EI2: May expose internal representation by incorporating reference to mutable object
                        Omit reason:
                        -->
                        <!--                        FindReturnRef,-->
                        <!-- UwF: Field not initialized in constructor but dereferenced without null check
                        Omit reason: When annotate a Map field with Lombok's @Singular annotation,
                        lombok builder doesn't check the nullity of the map, causing the inevitable failure on this bug detection -->
                        UnreadFields,
                        <!-- Nm: Class names shouldnâ€™t shadow simple name of implemented interface.
                        Omit reason: We typically tolerate our Presenter (clean architecture) to shadow its name from its interface,
                        Example: `class SubmissionPresenter implements tw.waterball.judgegirl.submission.domain.usecases.SubmissionPresenter`
                        -->
                        Naming,
                        <!-- UPM: Private method is never called.
                        Omit reason: False Positive, some methods are actually called by Spring boot.
                        Example: `DockerJudgerDeployer.removeAllExitedJudgerContainers` -->
                        FindUncalledPrivateMethods,
                        <!-- DMI: Code contains a hard coded reference to an absolute pathname
                        Omit reason: In a container, the hard-coded reference to an absolute pathname is acceptable.
                        Example: `tw.waterball.judgegirl.judger.filelayout.AbstractItem.getAbsolutePath` -->
                        DumbMethodInvocations,
                        <!-- UW: Unconditional wait, Wa: Wait not in loop
                        Omit reason: `tw.waterball.judgegirl.commons.utils.NotifyWaitLock` is an util class which is an encapsulation of 'lock'
                        and so it doesn't require condition to meet during notify-and-wait.
                        -->
                        FindUnconditionalWait, WaitInLoop,
                        <!-- EI: May expose internal representation by returning reference to mutable object
                            EI2: May expose internal representation by incorporating reference to mutable object
                            Omit reason: Too strict. Classes currently tightly coupled with 'java.util.Date' class which is mutable.-->
                        FindReturnRef
                    </omitVisitors>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs</artifactId>
                        <version>${spotbugs-plugin.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
